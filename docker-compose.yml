networks:
  backend:

services:
  postgres:
    image: postgres:16
    container_name: postgres
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: persons
    volumes:
      - ./postgres/:/docker-entrypoint-initdb.d/
    ports:
      - "5433:5432"
    networks:
      - backend

  gateway:
    build:
      context: gateway/
      dockerfile: Dockerfile
    container_name: gateway
    restart: on-failure
    environment:
      GATEWAY_PORT: 8080
      PERSON_URL: http://backend:8040
      LOYALTY_URL: http://backend:8050
      PAYMENT_URL: http://backend:8060
      RESERVATION_URL: http://backend:8070
    depends_on:
      - persons
      - loyalty
      - payment
      - reservation
    networks:
      - backend
    ports:
      - "8080:8080"

  persons:
    build:
      context: persons/
      dockerfile: Dockerfile
    container_name: persons
    restart: on-failure
    environment:
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: persons
      APP_PORT: 8040
    ports:
      - "8040:8040"
    depends_on:
      - postgres
    networks:
      - backend

  loyalty:
    build:
      context: loyalty/
      dockerfile: Dockerfile
    container_name: loyalty
    restart: on-failure
    environment:
      DB_HOST: postgres
      DB_NAME: loyalty
      DB_USER: postgres
      DB_PASSWORD: postgres
      APP_PORT: 8050
    ports:
      - "8050:8050"
    depends_on:
      - postgres
    networks:
      - backend

  payment:
    build:
      context: payment/
      dockerfile: Dockerfile
    container_name: payment
    restart: on-failure
    environment:
      DB_HOST: postgres
      DB_NAME: loyalty
      DB_USER: postgres
      DB_PASSWORD: postgres
      APP_PORT: 8060
    ports:
      - "8060:8060"
    depends_on:
      - postgres
    networks:
      - backend

  reservation:
    build:
      context: reservation/
      dockerfile: Dockerfile
    container_name: reservation
    restart: on-failure
    environment:
      DB_HOST: postgres
      DB_NAME: reservation
      DB_USER: postgres
      DB_PASSWORD: postgres
      APP_PORT: 8070
    ports:
      - "8070:8070"
    depends_on:
      - postgres
    networks:
      - backend
volumes:
  db-data:
