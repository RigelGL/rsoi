name: GitHub Classroom Workflow
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  persons_test:
    name: Persons test
    runs-on: ubuntu-latest
    container:
      image: golang:1.23.1-alpine

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - run: go mod tidy
        working-directory: persons
      - run: go build -o main .
        working-directory: persons

      - run: go test
        working-directory: persons
        env:
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_HOST: postgres:5432

  payment_test:
    name: Payment test
    runs-on: ubuntu-latest
    container:
      image: python:3.12.7-alpine3.20

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - run: pip install -r requirements.txt
        working-directory: payment

      - run: python -m unittest test.py
        working-directory: payment
        env:
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_HOST: postgres

  loyalty_test:
    name: Loyalty test
    runs-on: ubuntu-latest
    container:
      image: maven:3.8.8-eclipse-temurin-21-alpine

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - run: mvn dependency:go-offline
        working-directory: loyalty
      - run: mvn test
        working-directory: loyalty
        env:
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_HOST: postgres:5432

  deploy:
    needs: [ persons_test, payment_test, loyalty_test ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Deployment to render
        uses: JorgeLNJunior/render-deploy@v1.4.4
        with:
          api_key: ${{ secrets.RENDER_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          service_id: ${{ secrets.RENDER_SERVICE_ID }}
          wait_deploy: true

      - name: Check the deployed service URL
        uses: jtalk/url-health-check-action@v4
        with:
          url: https://rsoi-awsy.onrender.com/health
          follow-redirect: false
          max-attempts: 10
          retry-delay: 10s
          retry-all: false
