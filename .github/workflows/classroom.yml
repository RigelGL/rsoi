name: GitHub Classroom Workflow
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  persons_test:
    name: Persons test
    runs-on: ubuntu-latest
    container:
      image: golang:1.23.1-alpine

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - run: go mod tidy
        working-directory: persons
      - run: go build -o main .
        working-directory: persons

      - run: go test
        working-directory: persons
        env:
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_HOST: postgres:5432

  payment_test:
    name: Payment test
    runs-on: ubuntu-latest
    container:
      image: python:3.12.7-alpine3.20

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - run: pip install -r requirements.txt
        working-directory: payment

      - run: python -m unittest test.py
        working-directory: payment
        env:
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_HOST: postgres

  loyalty_test:
    name: Loyalty test
    runs-on: ubuntu-latest
    container:
      image: maven:3.8.8-eclipse-temurin-21-alpine

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - run: mvn dependency:go-offline
        working-directory: loyalty
      - run: mvn test
        working-directory: loyalty
        env:
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_HOST: postgres:5432

  reservation_test:
    name: Reservation test
    runs-on: ubuntu-latest
    container:
      image: node:lts-alpine3.19

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - run: npm i
        working-directory: reservation
      - run: npm run test
        working-directory: reservation
        env:
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_HOST: postgres

  gateway_test:
    name: Gateway test
    runs-on: ubuntu-latest
    container:
      image: node:lts-alpine3.19

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - run: npm i
        working-directory: gateway
      - run: npm run test
        working-directory: gateway

  deploy:
    needs: [ persons_test, payment_test, loyalty_test, reservation_test, gateway_test ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy via SSH
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: /rsoi
          EXCLUDE: "/.github/, /db-data/"
          SCRIPT_AFTER: |
            ls -al
            docker-compose up -d
            echo $RSYNC_STDOUT 

      - name: Check gateway health
        uses: jtalk/url-health-check-action@v4
        with:
          url: https://rsoi.rigellab.ru/manage/health
          follow-redirect: false
          max-attempts: 10
          retry-delay: 10s
          retry-all: false